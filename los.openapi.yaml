openapi: 3.0.3
info:
  title: Candor Api LOS Communication
  version: 0.13.0
  contact:
    name: Candor Api Specification
    url: https://github.com/candorfintech/Candor.Api.OpenAPI
externalDocs:
  description: Changelog
  url: https://github.com/candorfintech/Candor.Api.OpenAPI#changelog
tags:
- name: LOS
  description: LOS communication
  externalDocs:
    description: SwaggerUI
    url: https://candorfintech.github.io/Candor.Api.OpenAPI/?urls.primaryName=LOS
servers:
  - description: Development
    url: 'https://api-dev.candortechnology.com'
  - description: Staging
    url: 'https://api-stage.candortechnology.com'
  - description: Production
    url: 'https://api.candortechnology.com'

paths:
  /loan/subscribe:
    post:
      tags:
      - LOS
      summary: Register Callback (not currently implemented)
      description: |
        Subscribe an LOS callback Url to receive notifications when Candor results are available.

        **Note:** this is currently not implemented and only provided here for documentation of the object models.
      operationId: LosSubscribe
      security:
      - candor-api:
        - candorApi/write:los
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Callback Registration
              type: object
              required:
              - callbackUrl
              properties:
                callbackUrl:
                  type: string
                  format: uri
                  description: The callback url
                auth:
                  type: object
                  title: Authentication
                  description: If authentication is required for the `callbackUrl`, this object represents the type of authentication to use as well as any needed parameters. Additional supported authentication types could be added as needed.
                  oneOf:
                  - type: object
                    title: Header Authentication
                    description: Static headers added to the callback request
                    required:
                    - type
                    - headers
                    properties:
                      type:
                        type: string
                        description: Constant value of `header`
                        default: header
                        enum:
                        - header
                      headers:
                        type: object
                        description: A collection of keys and values that'll be added to the headers of the callback request.
                        additionalProperties:
                          type: string
            examples:
              CallbackRegNoAuth:
                summary: Callback registration without Auth
                value:
                  callbackUrl: https://api.los.com/callback
              CallbackRegWithCustomHeaders:
                summary: Callback registration with Custom Header(s) Auth
                value:
                  callbackUrl: https://api.los.com/callback
                  auth:
                    type: header
                    headers:
                      x-api-key: abc-123
              CallbackRegWithApiKey:
                summary: Callback registration with Bearer Api Key
                value:
                  callbackUrl: https://api.los.com/callback
                  auth:
                    type: header
                    headers:
                      Authorization: Bearer secret-api-key
              CallbackRegWithBasic:
                summary: Callback registration with Basic Auth
                value:
                  callbackUrl: https://api.los.com/callback
                  auth:
                    type: header
                    headers:
                      Authorization: Basic aGVsbG86d29ybGQ=
      callbacks:
        CandorResult:
          '{$request.body#/callbackUrl}':
            post:
              summary: Candor Result Callback
              description: Receive notification when a Candor Result has been created.
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CandorResult'
                    examples:
                      CandorResult:
                        $ref: '#/components/examples/CandorResult'
              responses:
                '2XX':
                  description: Candor Result was received.
                default:
                  description: Any non-success response code will be logged and retried a set number of times
      responses:
        '201':
          description: Callback set
        '400':
          description: Error in Request Body
        default:
          description: Unexpected Error

  /loan/{id}/document:
    parameters:
    - $ref: 'schemas.yaml#/components/parameters/LoanId'
    post:
      tags:
      - LOS
      operationId: LosUploadDocument
      summary: Request to upload loan documents
      description: Used by the LOS to upload documents associated with loan `{id}`.
        The request will contain some info about the documents to be uploaded such
        as filename. The results will then contain an upload Url (optionally
        with mandatory headers) that'll be used to upload the document with a PUT
        request.
      security:
      - candor-api:
        - candorApi/write:los
      requestBody:
        required: true
        description: A collection of documents that needs to be uploaded to Candor.
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/UploadDocumentRequest'
            examples:
              UploadDocumentRequest:
                $ref: '#/components/examples/UploadDocumentRequest'
      responses:
        '200':
          description: Request body is valid. Individual inspection of an error on each document should be performed. For documents with no error, the LOS would then perform a PUT request at the `upload.url`, using any returned `upload.headers`, and passing the document as the body of the request.
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/UploadDocumentResponse'
              examples:
                UploadDocumentResponse:
                  $ref: '#/components/examples/UploadDocumentResponse'
        '400':
          description: Error in Request Body
        default:
          description: Unexpected Error

  /loan/{id}:
    parameters:
    - $ref: 'schemas.yaml#/components/parameters/LoanId'
    post:
      tags:
      - LOS
      operationId: LosProcessLoan
      summary: Process loan with optional documents
      description: Submits Loan data, optionally with documents, to be processed by Candor.
      security:
      - candor-api:
        - candorApi/write:los
      requestBody:
        required: true
        description: Process Loan request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessLoan'
            examples:
              ProcessLoanReqNoDocuments:
                $ref: '#/components/examples/ProcessLoanReqNoDocuments'
              ProcessLoanReqWithDocuments:
                $ref: '#/components/examples/ProcessLoanReqWithDocuments'
      responses:
        '200':
          description: Successful response including loan data Candor Results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandorResult'
              examples:
                CandorResult:
                  $ref: '#/components/examples/CandorResult'
        '202':
          description: |
            Successful asynchronous response (no body returned).
            
            The processing of the loan will be done after this response and the caller will be notified of the results when Candor has results to report.
            
            NOTE: A synchronous request could be converted into an asynchronous request if a Candor Result cannot be returned at this time.
        '400':
          description: An error exists in the request body

components:
  schemas:
    ProcessLoan:
      type: object
      required:
      - loanData
      allOf:
      - $ref: 'schemas.yaml#/components/schemas/ProcessLoanBase'
      properties:
        # DRAFT: possible future structure to accept fraudReport which would
        #   then be pulled and put into loanData before sending to Decisions
        # fraudReport:
        #   type: object
        #   description: If a fraud report was performed, this data is provided
        #     to Candor in order to pull the fraud report so that it's included
        #     in processing of the loan.
        #   properties:
        #     id:
        #       type: string
        #     ssn:
        #       type: string
        #     name:
        #       type: string
        #     address:
        #       type: string
        loanData:
          type: array
          description: The various loan data associated with the loan. There
            must exist at least the URLA data.
          minItems: 1
          items:
            type: object
            required:
            - data
            - type
            properties:
              data:
                type: string
                description: The content in either xml, json, or base64 format.
              type:
                $ref: 'schemas.yaml#/components/schemas/LoanDataType'
        documentsToProcess:
          type: array
          description: A collection of document Ids previously uploaded to Candor.
          items:
            type: string

    CandorResult:
      type: object
      allOf:
      - $ref: 'schemas.yaml#/components/schemas/CandorResult'
      # Commented out until we can merge all the statuses into a single status.
      # properties:
      #   documentsProcessed:
      #     type: array
      #     items:
      #       type: object
      #       title: Processed Document
      #       properties:
      #         id:
      #           type: string
      #           description: The original LOS File Id supplied to the Candor Api for this document
      #         status:
      #           type: object
      #           properties:
      #             code:
      #               type: integer
      #               description: |
      #                 The processed status for this document

      #                 - 200: Successfully ICR'd
      #                 - 300: Duplicate Document Uploaded
      #                 - 301: Illegible Document
      #                 - 302: Ineligible Document
      #                 - 350: Partially ICR'd
      #                 - 400: Document Corrupted, Unable to open, or Editable pdf
      #                 - 401: Unable to match Borrower name on document to applicant; Lender to review
      #                 - 402: Unable to match SSN on document to applicant; Lender to review
      #                 - 403: Unable to match Employer on document to application; Lender to review
      #                 - 404: Unable to match Company Name on document to application; Lender to review
      #                 - 405: Document is outdated per guideline requirements
      #                 - 500: Failed ICR'd
      #               enum:
      #               - 200
      #               - 300
      #               - 301
      #               - 302
      #               - 350
      #               - 400
      #               - 401
      #               - 402
      #               - 403
      #               - 404
      #               - 405
      #               - 500
      #             message:
      #               type: string

  examples:
    CandorResult:
      summary: Candor Result
      value:
        loanId: c8e27489-0381-438f-8148-4b7a2379a64c
        runId: 1
        timestamp: '0001-01-01T00:00:00Z'
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        insuranceScore: '75'
        insuranceCovered: Pending
        underwritingStatus: Conditional Approval
        occupancy: Valid
        identity: Valid
        valuation: Pending
        liabilities: Pending
        assets: Pending
        income: Pending
        conditions:
        - conditionId: 151ce1d9-90e2-4e32-9337-8de6d8124e50
          status: Unfulfilled
          name: Condition Name
          description: Extended descriptive text for this condition
          priorTo: PTD
          owner: Lender
          category: Credit
        results:
        - name: Findings.pdf
          section: Candor - Findings Page
          base64: SGVsbG8gV29ybGQ=
        # documentsProcessed: []

    UploadDocumentRequest:
      summary: Request to upload multiple documents with varying input.
      value:
        documents:
        - id: 371d3620-1c98-4466-9f95-290b7748594d
          filename: HelloWorld.pdf
        - id: 9982324b-577e-4061-94f1-c506182cbe82
        - filename: FooBar.pdf
        - id: f8f1a13e-5cca-4a13-aa50-e1ecc6a93af7

    UploadDocumentResponse:
      summary: Response of multiple document upload request.
      value:
        id: c8e27489-0381-438f-8148-4b7a2379a64c
        documents:
        - id: 371d3620-1c98-4466-9f95-290b7748594d
          upload:
            url: https://bucket.s3.region.amazonws.com/document/path/371d3620-1c98-4466-9f95-290b7748594d.pdf?presigned-data
            headers:
              x-amz-meta-filename: HelloWorld.pdf
        - id: 9982324b-577e-4061-94f1-c506182cbe82
          upload:
            url: https://bucket.s3.region.amazonws.com/document/path/9982324b-577e-4061-94f1-c506182cbe82?presigned-data
        - id: 69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          upload:
            url: https://bucket.s3.region.amazonws.com/document/path/69f15f0d-ec1c-4a54-9798-9a2bd0803adb.pdf?presigned-data
            headers:
              x-amz-meta-filename: FooBar.pdf
        - id: f8f1a13e-5cca-4a13-aa50-e1ecc6a93af7
          error: Document already exists and cannot be overwritten.

    ProcessLoanReqNoDocuments:
      summary: Process loan request without documents
      value:
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        emails:
        - email: processor@domain.com
          type: Processor
        - email: underwriter@domain.com
          type: Underwriter
        investors:
          - name: Wells Fargo
            productName: 30 Year Fixed Mortgage
        gse: FannieMae
        # DRAFT: possible future structure to accept fraudReport which would
        #   then be pulled and put into loanData before sending to Decisions
        # fraudReport:
        #   id: 'abc234'
        #   ssn: '123-23-1234'
        #   name: John Doe
        #   address: 123 Street View
        loanData:
        - data: SGVsbG8gV29ybGQ=
          type: URLA
        - data: <xml>...</xml>
          type: DUXML
        - data: '{ "json": true }'
          type: CREDIT

    ProcessLoanReqWithDocuments:
      summary: Process loan request with documents
      value:
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        emails:
        - email: processor@domain.com
          type: Processor
        - email: underwriter@domain.com
          type: Underwriter
        investors:
          - name: Wells Fargo
            productName: 30 Year Fixed Mortgage
        gse: FannieMae
        # DRAFT: possible future structure to accept fraudReport which would
        #   then be pulled and put into loanData before sending to Decisions
        # fraudReport:
        #   id: 'abc234'
        #   ssn: '123-23-1234'
        #   name: John Doe
        #   address: 123 Street View
        loanData:
        - data: SGVsbG8gV29ybGQ=
          type: URLA
        - data: <xml>...</xml>
          type: DUXML
        - data: '{ "json": true }'
          type: CREDIT
        documentsToProcess:
        - 371d3620-1c98-4466-9f95-290b7748594d
        - 9982324b-577e-4061-94f1-c506182cbe82
        - 69f15f0d-ec1c-4a54-9798-9a2bd0803adb

  securitySchemes:
    candor-api:
      type: oauth2
      description: This will not work in SwaggerUI until CORS is enabled on Cognito
      flows:
        clientCredentials:
          tokenUrl: /token
          scopes:
            candorApi/write:los: Write access to LOS data
