openapi: 3.0.3
info:
  title: Candor Api Decisions Communication
  version: 0.14.0
  contact:
    name: Candor Api Specification
    url: https://github.com/candorfintech/Candor.Api.OpenAPI
externalDocs:
  description: Changelog
  url: https://github.com/candorfintech/Candor.Api.OpenAPI#changelog
servers:
  - description: Development
    url: 'https://api-dev.candortechnology.com'
  - description: Staging
    url: 'https://api-stage.candortechnology.com'
  - description: Production
    url: 'https://api.candortechnology.com'
    
tags:
- name: Decisions
  description: Candor Api calls into Decisions
  externalDocs:
    description: SwaggerUI
    url: https://candorfintech.github.io/Candor.Api.OpenAPI/?urls.primaryName=Decisions
- name: Candor Api
  description: Decisions calls into Candor Api

paths:
  /process-loan-data:
    post:
      tags:
      - Decisions
      operationId: DecisionsProcessLoan
      summary: Process Loan Data
      description: Sends the loan data into Decisions for ingestion and possible immediate processing (if `request.responseType` = `Synchronous`). If the `request.responseType` is `Asynchronous`, then the loan data will be ingested and just the `candorId` will be returned.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessLoan'
            examples:
              ProcessLoanReqSync:
                $ref: '#/components/examples/ProcessLoanReqSync'
              ProcessLoanReqAsync:
                $ref: '#/components/examples/ProcessLoanReqAsync'
      responses:
        '200':
          description: Successful synchronous response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandorResultsSync'
              example:
                loanId: c8e27489-0381-438f-8148-4b7a2379a64c
                candorId: 68098e32-ce8f-41a9-9ce7-7127514348f2
                runId: 1
                timestamp: '0001-01-01T00:00:00Z'
                context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
                customerId: CustomerName-Production
                insuranceScore: '75'
                insuranceCovered: Pending
                underwritingStatus: Conditional Approval
                occupancy: 10
                identity: 20
                valuation: 30
                liabilities: 40
                assets: null
                income: 50
                conditions:
                - conditionId: 151ce1d990e24e32
                  status: 'Unfulfilled'
                  name: Condition Name
                  description: Extended descriptive text for this condition
                  priorTo: PTD
                  owner: Lender
                  category: Credit
                results:
                - name: Findings.pdf
                  section: Candor - Findings Page
                  base64: SGVsbG8gV29ybGQ=
        '202':
          description: Successful asynchronous response
          content:
            application/json:
              schema:
                type: object
                title: Asynchronous Candor Result
                properties:
                  candorId:
                    $ref: '#/components/schemas/CandorId'
              example:
                candorId: 68098e32-ce8f-41a9-9ce7-7127514348f2
        default:
          description: Unexpected Error

  /process-loan-documents:
    post:
      tags:
      - Decisions
      operationId: DecisionsProcessDocuments
      summary: Process Loan Documents
      description: 'This will always be an asynchronous call and will always occur after a call to "Process Loan Data" has already occurred.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessDocuments'
            examples:
              ProcessLoanDocuments:
                $ref: '#/components/examples/ProcessLoanDocuments'
              ProcessLoanDocumentsWithDelete:
                $ref: '#/components/examples/ProcessLoanDocumentsWithDelete'
      responses:
        '202':
          description: Accepted
        default:
          description: Unexpected Error

  /loan/{id}/results:
    parameters:
    - $ref: 'schemas.yaml#/components/parameters/LoanId'
    post:
      tags:
      - Candor Api
      operationId: CandorResults
      summary: Report results back to Candor Api to then notify the LOS
      description: Candor Results sent to Candor Api to notify the LOS
      servers:
      - url: https://api.condortechnoloties.com
      security:
      - candor-api:
        - candorApi/full:candor
      requestBody:
        required: true
        description: Candor Results request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandorResultsAsync'
      responses:
        '200':
          description: Ok

components:
  schemas:
    CandorId:
      type: string
      description: The Decisions unique identifier for this loan application.
    CustomerId:
      type: string
      description: "Candor's internal Id for this customer"
    SessionId:
      type: string
      description: "Decisions' internal Auth Id for this customer"
    OutputType:
      type: string
      description: The response type from Decisions. This will always be "Json"
      enum:
        - Json
    CandorDocument:
      type: object
      required:
        - fileId
        - bucket
        - path
      properties:
        fileId:
          type: string
          description: The Candor Api unique identifier for this document
        bucket:
          type: string
          description: The S3 bucket
        path:
          type: string
          description: The S3 object key (path)

    ProcessLoan:
      type: object
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/ProcessLoanBase'
      required:
      - loanId
      - customerId
      - sessionid
      - outputtype
      - loanData
      properties:
        loanId:
          $ref: 'schemas.yaml#/components/schemas/LoanId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        sessionid:
          $ref:  "#/components/schemas/SessionId"
        outputtype:
          $ref: '#/components/schemas/OutputType'
        loanData:
          type: array
          description: The various loan data associated with the loan. There must exist at least the URLA data.
          minItems: 1
          items:
            type: object
            required:
            - data
            - type
            properties:
              data:
                type: string
                description: The content in base64 format
              type:
                $ref: 'schemas.yaml#/components/schemas/LoanDataType'
                # include `FRAUD` when the LOS can send fraudReport info

    ProcessDocuments:
      type: object
      required:
      - loanId
      - context
      - candorId
      - sessionid
      - outputtype
      - inputDocuments
      - outputDocuments
      properties:
        loanId:
          $ref: 'schemas.yaml#/components/schemas/LoanId'
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
        candorId:
          $ref:  "#/components/schemas/CandorId"
        sessionid:
          $ref:  "#/components/schemas/SessionId"
        outputtype:
          $ref:  "#/components/schemas/OutputType"
        inputDocuments:
          type: array
          title: Input Documents
          description: A list of LOS input documents and its processed status
          minItems: 1
          items:
            title: Input Document
            allOf:
              - $ref: '#/components/schemas/CandorDocument'
            required:
            - filename
            - status
            properties:
              filename:
                type: string
                description: The LOS filename of this Document.
              status:
                type: object
                title: Status
                description: |
                  The processed status for this LOS input document.

                  - 200: Successfully ICR'd
                  - 300: Duplicate Document Uploaded
                  - 400: Document Corrupted, Unable to open, or Editable pdf
                  - 500: Ineligible Document
                required:
                - code
                - message
                properties:
                  code:
                    type: integer
                    enum:
                    - 200
                    - 300
                    - 400
                    - 500
                  message:
                    type: string
                    description: Descriptive text of the status
        outputDocuments:
          type: array
          title: Output Documents
          description: A list of ICR output documents
          minItems: 1
          items:
            title: Output Document
            allOf:
              - $ref: '#/components/schemas/CandorDocument'
            properties:
              deleted:
                type: boolean
                default: false
                description: If this is true, then the file that was previously uploaded should be marked as deleted and not used for further processing.

    CandorResultsSync:
      type: object
      title: Candor Results
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/CandorResult'
      properties:
        candorId:
          $ref: '#/components/schemas/CandorId'
        documentsProcessed:
          type: array
          title: Documents Processed
          items:
            type: object
            title: Processed Document
            required:
            - fileId
            - parentFileId
            - status
            properties:
              fileId:
                type: string
                description: The Candor Api unique identifier for this document
              parentFileId:
                type: string
                description: The unique identifier of the source document (original inputDocument).
              status:
                type: object
                properties:
                  code:
                    type: integer
                    description: |
                      The processed status for this document

                      - 200: Successfully ICR'd
                      - 300: Duplicate Document Uploaded
                      - 301: Illegible Document
                      - 302: Ineligible Document
                      - 350: Partially ICR'd
                      - 400: Document Corrupted, Unable to open, or Editable pdf
                      - 401: Unable to match Borrower name on document to applicant; Lender to review
                      - 402: Unable to match SSN on document to applicant; Lender to review
                      - 403: Unable to match Employer on document to application; Lender to review
                      - 404: Unable to match Company Name on document to application; Lender to review
                      - 405: Document is outdated per guideline requirements
                      - 406: Successfully ICR'd
                      - 500: Failed ICR'd
                    # Input Document Status Result
                    # 406 -> 200
                    enum:
                    - 200
                    - 300
                    - 301
                    - 302
                    - 350
                    - 400
                    - 401
                    - 402
                    - 403
                    - 404
                    - 405
                    - 406
                    - 500
                  message:
                    type: string

    CandorResultsAsync:
      allOf:
        - $ref: '#/components/schemas/CandorResultsSync'
      properties:
        emails:
          type: array
          title: Emails
          description: A list of emails to notify when a Candor Result is processed that contained new documents uploaded to the loan.
          items:
            type: string

  examples:
    ProcessLoanReqSync:
      summary: Synchronous Process Loan Request
      value:
        loanId: c8e27489-0381-438f-8148-4b7a2379a64c
        customerId: CustomerName-Production
        sessionid: NS-88be6e65-cdef-4bcc-8298-d6b09b577a33
        outputtype: Json
        responseType: Synchronous
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        emails:
          - email: processor@domain.com
            type: Processor
          - email: underwriter@domain.com
            type: Underwriter
        investors:
          - name: Wells Fargo
            productName: 30 Year Fixed Mortgage
        gse: FannieMae
        loanData:
          - data: SGVsbG8gV29ybGQ=
            type: URLA
          - data: SGVsbG8gV29ybGQ=
            type: DUXML
          - data: SGVsbG8gV29ybGQ=
            type: CREDIT

    ProcessLoanReqAsync:
      summary: Asynchronous Process Loan Request
      value:
        loanId: c8e27489-0381-438f-8148-4b7a2379a64c
        customerId: CustomerName-Production
        sessionid: NS-88be6e65-cdef-4bcc-8298-d6b09b577a33
        outputtype: Json
        responseType: Asynchronous
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        emails:
          - email: processor@domain.com
            type: Processor
          - email: underwriter@domain.com
            type: Underwriter
        investors:
          - name: Wells Fargo
            productName: 30 Year Fixed Mortgage
        gse: FannieMae
        loanData:
          - data: SGVsbG8gV29ybGQ=
            type: URLA
          - data: SGVsbG8gV29ybGQ=
            type: DUXML
          - data: SGVsbG8gV29ybGQ=
            type: CREDIT

    ProcessLoanDocuments:
      summary: Process Loan Documents
      value:
        loanId: c8e27489-0381-438f-8148-4b7a2379a64c
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        candorId: 68098e32-ce8f-41a9-9ce7-7127514348f2
        sessionid: NS-88be6e65-cdef-4bcc-8298-d6b09b577a33
        outputtype: Json
        inputDocuments:
        - fileId: 056960be-e703-4eeb-8f0a-3ea58063ba34
          bucket: loan-documents
          filename: HelloWorld.pdf
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/input/371d3620-1c98-4466-9f95-290b7748594d
          status:
            code: 200
            message: Successfully ICR'd
        - fileId: 5b445ebd-e16c-4613-9b7b-41e57334b073
          bucket: loan-documents
          filename: Document
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/input/9982324b-577e-4061-94f1-c506182cbe82
          status:
            code: 300
            message: Duplicate request
        - fileId: 75717e24-8102-4140-9c01-5044928cae2e
          bucket: loan-documents
          filename: FooBar.pdf
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/input/69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          status:
            code: 400
            message: Error Type - Corrupted Document
        outputDocuments:
        - fileId: 0de5531b-7e6c-426e-a3ba-5461f149beaf
          bucket: loan-documents
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/output/d42e2100-103a-414a-8de7-3d5935716bcd
        - fileId: ea1609fb-72ef-416e-9659-8aabc54415d6
          bucket: loan-documents
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/output/53965b26-07eb-4498-a1c5-754e00569c83
        - fileId: 1e72bdef-bfb3-4214-9a61-463e6b8070fb
          bucket: loan-documents
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/output/8770662d-8d25-413a-88c2-d232fea48bfc

    ProcessLoanDocumentsWithDelete:
      summary: Process Loan Documents with Deleted Output Documents
      value:
        loanId: c8e27489-0381-438f-8148-4b7a2379a64c
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        candorId: 68098e32-ce8f-41a9-9ce7-7127514348f2
        sessionid: NS-88be6e65-cdef-4bcc-8298-d6b09b577a33
        outputtype: Json
        inputDocuments:
        - fileId: 056960be-e703-4eeb-8f0a-3ea58063ba34
          bucket: loan-documents
          filename: HelloWorld.pdf
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/input/371d3620-1c98-4466-9f95-290b7748594d
          status:
            code: 200
            message: Successfully ICR'd
        - fileId: 5b445ebd-e16c-4613-9b7b-41e57334b073
          bucket: loan-documents
          filename: Document
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/input/9982324b-577e-4061-94f1-c506182cbe82
          status:
            code: 300
            message: Duplicate request
        - fileId: 75717e24-8102-4140-9c01-5044928cae2e
          bucket: loan-documents
          filename: FooBar.pdf
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/input/69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          status:
            code: 400
            message: Error Type - Corrupted Document
        outputDocuments:
        - fileId: 0de5531b-7e6c-426e-a3ba-5461f149beaf
          bucket: loan-documents
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/output/d42e2100-103a-414a-8de7-3d5935716bcd
          deleted: true
        - fileId: ea1609fb-72ef-416e-9659-8aabc54415d6
          bucket: loan-documents
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/output/53965b26-07eb-4498-a1c5-754e00569c83
          deleted: true
        - fileId: 1e72bdef-bfb3-4214-9a61-463e6b8070fb
          bucket: loan-documents
          path: 029d4378-e479-4c53-a671-b3e89d829911/c8e27489-0381-438f-8148-4b7a2379a64c/output/8770662d-8d25-413a-88c2-d232fea48bfc
          deleted: true

  securitySchemes:
    candor-api:
      type: oauth2
      description: This will not work in SwaggerUI until CORS is enabled on Cognito
      flows:
        clientCredentials:
          tokenUrl: /token
          scopes:
            candorApi/candorApi/full:candor: Write access to LOS data
