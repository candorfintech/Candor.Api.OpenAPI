openapi: 3.0.3
info:
  title: Candor Api ICR Communication
  version: 0.3.0
externalDocs:
  description: OpenAPI SwaggerUI
  url: https://candorfintech.github.io/Candor.Api.OpenAPI/?urls.primaryName=ICR
tags:
- name: ICR

paths:
  /icr/subscribe:
    post:
      tags:
      - ICR
      summary: Register Callback
      description: Subscribe an ICR callback url to receive notifications when files are ready to be processed
      operationId: IcrSubscribe
      security:
      - candor-api:
        - candorApi/write:icr
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Callback Url
              type: object
              required:
              - callbackUrl
              properties:
                callbackUrl:
                  type: string
                  format: uri
                  description: The callback url
              example:
                callbackUrl: https://api.icr.com/callback
      callbacks:
        FilesAvailable:
          '{$request.body#/callbackUrl}':
            post:
              summary: Files Available Callback
              description: Receive notification when files are available for processing.
              requestBody:
                required: true
                content:
                  application/json:
                    examples:
                      Callback:
                        $ref: '#/components/examples/Callback'
                    schema:
                      $ref: '#/components/schemas/Callback'
              responses:
                '2XX':
                  description: We expect any successful response
                default:
                  description: Any non-success response code will be logged.
      responses:
        '201':
          description: Callback set
        '400':
          description: Error in Request Body
        default:
          description: Unexpected Error

  /loan/{id}/file/{fileId}:
    parameters:
      - name: id
        $ref: 'schemas.yaml#/components/parameters/LoanId'
      - name: fileId
        description: The unique identifier for this file.
        required: true
        in: path
        example: 371d3620-1c98-4466-9f95-290b7748594d
        schema:
          type: string
    get:
      tags:
      - ICR
      security:
      - candor-api:
        - candorApi/read:icr
      responses:
        302:
          description: Redirect to authorized download Url.
        403:
          description: Unauthorized
        404:
          description: Not Found

  /icr/{id}/file:
    parameters:
    - name: id
      $ref: 'schemas.yaml#/components/parameters/LoanId'
    post:
      tags:
      - ICR
      operationId: IcrUploadFile
      summary: Request to upload output files
      description: Used by the ICR to upload result files associated with loan `{id}`. The request will contain some info about the files to be uploaded such as filename. The results will then contain an upload Url (optionally with mandatory headers) that'll be used to upload the file with a PUT request.
      security:
      - candor-api:
        - candorApi/write:icr
      requestBody:
        required: true
        description: A collection of output files that needs to be uploaded to Candor.
        content:
          application/json:
            examples:
              UploadFileRequest:
                $ref: '#/components/examples/UploadFileRequest'
            schema:
              $ref: '#/components/schemas/UploadFileRequest'
      responses:
        '200':
          description: Request body is valid. Individual inspection of an error on each file should be performed. For files with no error, the ICR would then perform a PUT request at the `upload.url`, using any returned `upload.headers`, and passing the file as the body of the request.
          content:
            application/json:
              examples:
                UploadFileResponse:
                  $ref: '#/components/examples/UploadFileResponse'
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
        '400':
          description: Error in Request Body
        default:
          description: Unexpected Error

  /icr/{id}:
    parameters:
    - name: id
      $ref: 'schemas.yaml#/components/parameters/LoanId'
    post:
      tags:
      - ICR
      operationId: IcrFilesProcessed
      summary: Report Files Processed
      description: Used by the ICR to report files processed and their status. This should be the same location as the `callback` property in the FilesAvailable callback event.
      security:
      - candor-api:
        - candorApi/write:icr
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilesProcessed'
            examples:
              FilesProcessedRequest:
                $ref: '#/components/examples/FilesProcessedRequest'
      responses:
        202:
          description: Accepted
        400:
          description: Unexpected Request Body.
        404:
          description: Either an input or output file was not found.


components:
  schemas:
    Callback:
      type: object
      title: Callback
      required:
      - id
      - context
      - callback
      - files
      properties:
        id:
          $ref: 'schemas.yaml#/components/schemas/LoanId'
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
        callback:
          type: string
          format: uri
          default: /icr/{id}
          description: The Url where results should be POST'ed.
        files:
          type: array
          description: The collection of input files to be processed.
          minItems: 1
          items:
            type: object
            required:
            - id
            - url
            properties:
              id:
                type: string
                description: The unique identifier for this file
              url:
                type: string
                description: The Url where this file can be downloaded from. This Url will require the use of Candor Authentication and will need to follow 302 redirects.
                default: /loan/{id}/file/{fileId}

    UploadFileRequest:
      type: object
      title: Upload File Request
      required:
      - context
      - files
      allOf:
      - $ref: 'schemas.yaml#/components/schemas/UploadFileRequest'
      properties:
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
    
    UploadFileResponse:
      type: object
      title: Upload File Response
      allOf:
      - $ref: 'schemas.yaml#/components/schemas/UploadFileResponse'
      properties:
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'

    FilesProcessed:
      type: object
      title: Files Processed Request
      required:
        - id
        - context
        - inputFiles
        - outputFileIds
      properties:
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
        inputFiles:
          type: array
          title: Input File Statuses
          description: A list of the input files and their processed status
          minItems: 1
          items:
            title: File Status
            required:
            - id
            - status
            properties:
              id:
                type: string
                description: The unique identifier for this file. This should match the id in the FilesAvailable callback.
              status:
                type: object
                required:
                - code
                - message
                properties:
                  code:
                    type: integer
                    format: int32
                    description: |
                      - 200: Success
                      - 300: Duplicate
                      - 400: Corrupted
                      - 500: Document Untrusted
                    enum:
                      - 200
                      - 300
                      - 400
                      - 500
                  message:
                    type: string
                    description: Descriptive text of the status
        outputFileIds:
          type: array
          title: Output File Ids
          description: An Id list of the output files generated from the inputFiles
          minItems: 1
          items:
            type: string
            description: The unique identifier given to this output file from the upload output file response.

  examples:

    Callback:
      summary: Files available for processing (FilesAvailable)
      value:
        id: c8e27489-0381-438f-8148-4b7a2379a64c
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        callback: https://api.condortechnologies.com/icr/c8e27489-0381-438f-8148-4b7a2379a64c
        files:
        - id: 371d3620-1c98-4466-9f95-290b7748594d
          url: https://api.candortechnologies.com/loan/c8e27489-0381-438f-8148-4b7a2379a64c/file/371d3620-1c98-4466-9f95-290b7748594d
        - id: 9982324b-577e-4061-94f1-c506182cbe82
          url: https://api.candortechnologies.com/loan/c8e27489-0381-438f-8148-4b7a2379a64c/file/9982324b-577e-4061-94f1-c506182cbe82
        - id: 69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          url: https://api.candortechnologies.com/loan/c8e27489-0381-438f-8148-4b7a2379a64c/file/69f15f0d-ec1c-4a54-9798-9a2bd0803adb

    UploadFileRequest:
      summary: Request to upload multiple files with varying input.
      value:
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        files:
        - id: d42e2100-103a-414a-8de7-3d5935716bcd
          filename: W2-1.pdf
        - id: 53965b26-07eb-4498-a1c5-754e00569c83
        - filename: PayStub-1.pdf
        - id: 63cc7e02-31ca-46e2-b9af-d2efe2eac4a5

    UploadFileResponse:
      summary: Response of multiple file upload request.
      value:
        id: c8e27489-0381-438f-8148-4b7a2379a64c
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        files:
        - id: d42e2100-103a-414a-8de7-3d5935716bcd
          upload:
            url: https://bucket.s3.region.amazonws.com/file/path/d42e2100-103a-414a-8de7-3d5935716bcd.pdf?presigned-data
            headers:
              x-amz-meta-filename: W2-1.pdf
        - id: 53965b26-07eb-4498-a1c5-754e00569c83
          upload:
            url: https://bucket.s3.region.amazonws.com/file/path/53965b26-07eb-4498-a1c5-754e00569c83?presigned-data
        - id: 8770662d-8d25-413a-88c2-d232fea48bfc
          upload:
            url: https://bucket.s3.region.amazonws.com/file/path/69f15f0d-ec1c-4a54-9798-9a2bd0803adb.pdf?presigned-data
            headers:
              x-amz-meta-filename: PayStub-1.pdf
        - id: 63cc7e02-31ca-46e2-b9af-d2efe2eac4a5
          error: File already exists and cannot be overwritten.

    FilesProcessedRequest:
      summary: Files Processed Request
      value:
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        inputFiles:
        - id: 371d3620-1c98-4466-9f95-290b7748594d
          status:
            code: 200
            message: Successfully ICR'd
        - id: 9982324b-577e-4061-94f1-c506182cbe82
          status:
            code: 300
            message: Duplicate request
        - id: 69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          status:
            code: 400
            message: Error Type - Corrupted Document
        outputFileIds:
          - d42e2100-103a-414a-8de7-3d5935716bcd
          - 53965b26-07eb-4498-a1c5-754e00569c83
          - 8770662d-8d25-413a-88c2-d232fea48bfc

  securitySchemes:
    candor-api:
      type: oauth2
      description: This will not work in SwaggerUI until CORS is enabled on Cognito
      flows:
        clientCredentials:
          tokenUrl: https://candor-api-dev.auth.us-east-2.amazoncognito.com/oauth2/token
          scopes:
            candorApi/read:icr: Write access to ICR data
            candorApi/write:icr: Write access to ICR data
