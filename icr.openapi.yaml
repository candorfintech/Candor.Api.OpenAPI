openapi: 3.0.3
info:
  title: Candor Api ICR Communication
  version: 0.16.0
  contact:
    name: Candor Api Specification
    url: https://github.com/candorfintech/Candor.Api.OpenAPI
externalDocs:
  description: Changelog
  url: https://github.com/candorfintech/Candor.Api.OpenAPI#changelog
tags:
- name: ICR
  description: ICR Communication
  externalDocs:
    description: SwaggerUI
    url: https://candorfintech.github.io/Candor.Api.OpenAPI/?urls.primaryName=ICR
servers:
  - description: Development
    url: 'https://api-dev.candortechnology.com'
  - description: Staging
    url: 'https://api-stage.candortechnology.com'
  - description: Production
    url: 'https://api.candortechnology.com'

paths:
  /icr/subscribe:
    post:
      tags:
      - ICR
      summary: Register Callback (not currently implemented)
      description: |
        Subscribe an ICR callback Url to receive notifications when documents are ready to be processed.

        **Note:** this is currently not implemented and only provided here for documentation of the object models.
      operationId: IcrSubscribe
      security:
      - candor-api:
        - candorApi/write:icr
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Callback Registration
              type: object
              required:
              - callbackUrl
              properties:
                callbackUrl:
                  type: string
                  format: uri
                  description: The callback url
                auth:
                  type: object
                  title: Authentication
                  description: If authentication is required for the `callbackUrl`, this object represents the type of authentication to use as well as any needed parameters. Additional supported authentication types could be added as needed.
                  oneOf:
                  - type: object
                    title: Header Authentication
                    description: Static headers added to the callback request
                    required:
                    - type
                    - headers
                    properties:
                      type:
                        type: string
                        description: Constant value of `header`
                        default: header
                        enum:
                        - header
                      headers:
                        type: object
                        description: A collection of keys and values that'll be added to the headers of the callback request.
                        additionalProperties:
                          type: string
            examples:
              CallbackRegNoAuth:
                summary: Callback registration without Auth
                value:
                  callbackUrl: https://api.icr.com/callback
              CallbackRegWithCustomHeaders:
                summary: Callback registration with Custom Header(s) Auth
                value:
                  callbackUrl: https://api.icr.com/callback
                  auth:
                    type: header
                    headers:
                      x-api-key: abc-123
              CallbackRegWithApiKey:
                summary: Callback registration with Bearer Api Key
                value:
                  callbackUrl: https://api.icr.com/callback
                  auth:
                    type: header
                    headers:
                      Authorization: Bearer secret-api-key
              CallbackRegWithBasic:
                summary: Callback registration with Basic Auth
                value:
                  callbackUrl: https://api.icr.com/callback
                  auth:
                    type: header
                    headers:
                      Authorization: Basic aGVsbG86d29ybGQ=
      callbacks:
        DocumentsAvailable:
          '{$request.body#/callbackUrl}':
            post:
              summary: Documents Available Callback
              description: Receive notification when documents are available for processing.
              requestBody:
                required: true
                content:
                  application/json:
                    examples:
                      Callback:
                        $ref: '#/components/examples/Callback'
                    schema:
                      $ref: '#/components/schemas/Callback'
              responses:
                '2XX':
                  description: Request was received and individual document status will be reported in the response body.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentsReceived'
                default:
                  description: Any non-success response code will be logged and retried a set number of times
      responses:
        '201':
          description: Callback set
        '400':
          description: Error in Request Body
        default:
          description: Unexpected Error

  /document/{id}/{loanId}/{documentId}:
    parameters:
    - name: id
      description: An internal identifier
      required: true
      in: path
      example: 505da43f-f478-4f35-8c87-63349aacbe36
      schema:
        type: string
    - name: loanId
      description: The unique identifier for this loan application.
      in: path
      required: true
      example: c8e27489-0381-438f-8148-4b7a2379a64c
      schema:
        $ref: 'schemas.yaml#/components/schemas/LoanId'
    - name: documentId
      description: The unique identifier for this document.
      required: true
      in: path
      example: 371d3620-1c98-4466-9f95-290b7748594d
      schema:
        type: string
    get:
      tags:
      - ICR
      operationId: DownloadDocument
      summary: Download loan document
      description: |
        Download a document associated with the specified loan.

        **Note:** You should not need to manually construct this URL. This full URL will be provided to you from the `DocumentsAvailable` callback.
      security:
      - candor-api:
        - candorApi/read:icr
      responses:
        '302':
          description: Redirect to authorized download Url.
        '403':
          description: Unauthorized
        '404':
          description: Not Found

  /icr/{id}/document:
    parameters:
    - $ref: 'schemas.yaml#/components/parameters/LoanId'
    post:
      tags:
      - ICR
      operationId: IcrUploadDocument
      summary: Request to upload output documents
      description: Used by the ICR to upload result documents associated with loan `{id}`. The request will contain some info about the documents to be uploaded such as filename. The results will then contain an upload Url (optionally with mandatory headers) that'll be used to upload the document with a PUT request.
      security:
      - candor-api:
        - candorApi/write:icr
      requestBody:
        required: true
        description: A collection of output documents that needs to be uploaded to Candor.
        content:
          application/json:
            examples:
              UploadDocumentRequest:
                $ref: '#/components/examples/UploadDocumentRequest'
            schema:
              $ref: '#/components/schemas/UploadDocumentRequest'
      responses:
        '200':
          description: Request body is valid. Individual inspection of an error on each document should be performed. For documents with no error, the ICR would then perform a PUT request at the `upload.url`, using any returned `upload.headers`, and passing the document as the body of the request.
          content:
            application/json:
              examples:
                UploadDocumentResponse:
                  $ref: '#/components/examples/UploadDocumentResponse'
              schema:
                $ref: '#/components/schemas/UploadDocumentResponse'
        '400':
          description: Error in Request Body
        default:
          description: Unexpected Error

  /icr/{id}:
    parameters:
    - $ref: 'schemas.yaml#/components/parameters/LoanId'
    post:
      tags:
      - ICR
      operationId: IcrDocumentsProcessed
      summary: Report Documents Processed
      description: Used by the ICR to report documents processed and their status. This should be the same location as the `callback` property in the DocumentsAvailable callback event.
      security:
      - candor-api:
        - candorApi/write:icr
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsProcessed'
            examples:
              DocumentsProcessedRequest:
                $ref: '#/components/examples/DocumentsProcessedRequest'
              DeletedDocumentsProcessedRequest:
                $ref: '#/components/examples/DeletedDocumentsProcessedRequest'
      responses:
        '202':
          description: Accepted
        '400':
          description: Unexpected Request Body.
        '404':
          description: Either an input or output document was not found.


components:
  schemas:
    Callback:
      type: object
      title: Callback
      required:
      - id
      - context
      - callback
      - documents
      properties:
        id:
          $ref: 'schemas.yaml#/components/schemas/LoanId'
        name:
          $ref: 'schemas.yaml#/components/schemas/LoanName'
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
        callback:
          type: string
          format: uri
          default: /icr/{id}
          description: The Url where results should be POST'ed.
        documents:
          type: array
          description: The collection of input documents to be processed.
          minItems: 1
          items:
            type: object
            required:
            - id
            - url
            properties:
              id:
                type: string
                description: The unique identifier for this document
              url:
                type: string
                description: The Url where this document can be downloaded from. This Url will require the use of Candor Authentication and will need to follow 302 redirects.
                default: /loan/{id}/document/{documentId}

    UploadDocumentRequest:
      type: object
      title: Upload Document Request
      required:
      - context
      - documents
      allOf:
      - $ref: 'schemas.yaml#/components/schemas/UploadDocumentRequest'
      properties:
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
    
    UploadDocumentResponse:
      type: object
      title: Upload Document Response
      allOf:
      - $ref: 'schemas.yaml#/components/schemas/UploadDocumentResponse'
      properties:
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
    
    DocumentsReceived:
      type: object
      title: Documents Received Response
      required:
        - inputDocuments
      properties:
        inputDocuments:
          type: array
          title: Input Document Statuses
          description: A list of the input documents and their received status
          minItems: 1
          items:
            title: Document Status
            required:
              - id
              - status
            properties:
              id:
                type: string
                description: The unique identifier for this document. This should match the id in the DocumentsAvailable callback.
              status:
                type: object
                required:
                - code
                - message
                properties:
                  code:
                    type: integer
                    description: |
                      - 2000: Uploaded Successfully
                      - 401: Unauthorized Access
                      - 4000: Something went wrong
                      - 4002: Mandatory Data is missing
                      - 4003: Unsupported File Format
                      - 4004: Unable to process as document does not exist
                      - 4008: Duplicate Request
                    # Input Document Status Result
                    # 4003 -> 302
                    # 4008 -> 300
                    enum:
                    - 2000
                    - 401
                    - 4000
                    - 4002
                    - 4003
                    - 4004
                    - 4008
                  message:
                    type: string
                    description: Descriptive text of the status

    DocumentsProcessed:
      type: object
      title: Documents Processed Request
      required:
        - context
        - inputDocuments
        - outputDocumentIds
      properties:
        context:
          $ref: 'schemas.yaml#/components/schemas/Context'
        inputDocuments:
          type: array
          title: Input Document Statuses
          description: A list of the input documents and their processed status
          minItems: 1
          items:
            title: Document Status
            required:
            - id
            - status
            properties:
              id:
                type: string
                description: The unique identifier for this document. This should match the id in the DocumentsAvailable callback.
              status:
                type: object
                required:
                - code
                - message
                properties:
                  code:
                    type: integer
                    description: |
                      - 200: Successfully ICR'd
                      - 300: Duplicate Document Uploaded
                      - 301: Illegible Document
                      - 302: Ineligible Document
                      - 350: Partially ICR'd
                      - 400: Document Corrupted, Unable to open, or Editable pdf
                      - 500: Failed ICR'd
                    enum:
                    - 200
                    - 300
                    - 301
                    - 302
                    - 350
                    - 400
                    - 500
                  message:
                    type: string
                    description: Descriptive text of the status
        outputDocumentIds:
          type: array
          title: Output Document Ids
          description: An Id list of the output documents generated from the inputDocuments
          minItems: 0
          items:
            type: string
            description: The unique identifier given to this output document from the upload output document response.
        deletedOutputDocumentIds:
          type: array
          title: Delete Output Document Ids
          description: An Id list of previously submitted output documents that should be considered deleted and removed from further processing.
          items:
            type: string
            description: The unique identifier given to this output document from the upload output document response.

  examples:

    Callback:
      summary: Documents available for processing (DocumentsAvailable)
      value:
        id: c8e27489-0381-438f-8148-4b7a2379a64c
        name: abc123
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        callback: https://api.condortechnologies.com/icr/c8e27489-0381-438f-8148-4b7a2379a64c
        documents:
        - id: 371d3620-1c98-4466-9f95-290b7748594d
          url: https://api.candortechnologies.com/document/505da43f-f478-4f35-8c87-63349aacbe36/c8e27489-0381-438f-8148-4b7a2379a64c/371d3620-1c98-4466-9f95-290b7748594d
        - id: 9982324b-577e-4061-94f1-c506182cbe82
          url: https://api.candortechnologies.com/document/505da43f-f478-4f35-8c87-63349aacbe36/c8e27489-0381-438f-8148-4b7a2379a64c/9982324b-577e-4061-94f1-c506182cbe82
        - id: 69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          url: https://api.candortechnologies.com/document/505da43f-f478-4f35-8c87-63349aacbe36/c8e27489-0381-438f-8148-4b7a2379a64c/69f15f0d-ec1c-4a54-9798-9a2bd0803adb

    UploadDocumentRequest:
      summary: Request to upload multiple documents with varying input.
      value:
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        documents:
        - id: d42e2100-103a-414a-8de7-3d5935716bcd
          filename: W2-1.json
        - id: 53965b26-07eb-4498-a1c5-754e00569c83
        - filename: PayStub-1.json

    UploadDocumentResponse:
      summary: Response of multiple document upload request.
      value:
        id: c8e27489-0381-438f-8148-4b7a2379a64c
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        documents:
        - id: d42e2100-103a-414a-8de7-3d5935716bcd
          upload:
            url: https://bucket.s3.region.amazonws.com/document/path/d42e2100-103a-414a-8de7-3d5935716bcd.json?presigned-data
            headers:
              x-amz-meta-filename: W2-1.json
        - id: 53965b26-07eb-4498-a1c5-754e00569c83
          upload:
            url: https://bucket.s3.region.amazonws.com/document/path/53965b26-07eb-4498-a1c5-754e00569c83?presigned-data
        - id: 8770662d-8d25-413a-88c2-d232fea48bfc
          upload:
            url: https://bucket.s3.region.amazonws.com/document/path/69f15f0d-ec1c-4a54-9798-9a2bd0803adb.json?presigned-data
            headers:
              x-amz-meta-filename: PayStub-1.json

    DocumentsProcessedRequest:
      summary: Documents Processed Request
      value:
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        inputDocuments:
        - id: 371d3620-1c98-4466-9f95-290b7748594d
          status:
            code: 200
            message: Successfully ICR'd
        - id: 9982324b-577e-4061-94f1-c506182cbe82
          status:
            code: 300
            message: Duplicate request
        - id: 69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          status:
            code: 400
            message: Error Type - Corrupted Document
        outputDocumentIds:
          - d42e2100-103a-414a-8de7-3d5935716bcd
          - 53965b26-07eb-4498-a1c5-754e00569c83
          - 8770662d-8d25-413a-88c2-d232fea48bfc

    DeletedDocumentsProcessedRequest:
      summary: Documents Processed Request with Deleted Documents
      value:
        context: 6cea2800-eb9e-4cd5-8136-4dd11dadf388
        inputDocuments:
        - id: 371d3620-1c98-4466-9f95-290b7748594d
          status:
            code: 200
            message: Successfully ICR'd
        - id: 9982324b-577e-4061-94f1-c506182cbe82
          status:
            code: 300
            message: Duplicate request
        - id: 69f15f0d-ec1c-4a54-9798-9a2bd0803adb
          status:
            code: 400
            message: Error Type - Corrupted Document
        outputDocumentIds: []
        deletedOutputDocumentIds:
          - d42e2100-103a-414a-8de7-3d5935716bcd
          - 53965b26-07eb-4498-a1c5-754e00569c83
          - 8770662d-8d25-413a-88c2-d232fea48bfc

  securitySchemes:
    candor-api:
      type: oauth2
      description: This will not work in SwaggerUI until CORS is enabled on Cognito
      flows:
        clientCredentials:
          tokenUrl: /token
          scopes:
            candorApi/read:icr: Write access to ICR data
            candorApi/write:icr: Write access to ICR data
